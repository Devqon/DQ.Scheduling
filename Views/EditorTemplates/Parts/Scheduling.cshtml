@model DQ.Scheduling.ViewModels.SchedulingEditViewModel

<fieldset>
    @Html.LabelFor(m => m.StartDateTimeEditor, T("Start"))
    @Html.EditorFor(m => m.StartDateTimeEditor)
</fieldset>
<fieldset>
    @Html.LabelFor(m => m.EndDateTimeEditor, T("End"))
    @Html.EditorFor(m => m.EndDateTimeEditor)
</fieldset>
<fieldset>
    @Html.CheckBoxFor(m => m.IsAllDay)
    <label for="@Html.FieldIdFor(m => m.IsAllDay)" class="forcheckbox">@T("All day")</label>
    <span class="hint">@T("Check if the event lasts all day")</span>
</fieldset>
<fieldset>
    <label for="@Html.FieldIdFor(m => m.DisplayUrlOverride)">@T("Event page url")</label>
    @Html.TextBoxFor(m => m.DisplayUrlOverride, new { type = "url" })
    <span class="hint">@T("Override the default linking functionality if you want this event to link to a specific URL (i.e. an external web page)")</span>
</fieldset>

@using (Script.Foot())
{
    <script>

        (function ($) {

            var toggleCheckbox = $("#@Html.FieldIdFor(m => m.IsAllDay)");

            toggleCheckbox.change(function () {
                toggleTimeFields();
            });

            function toggleTimeFields() {
                $("#@Html.FieldIdFor(m => m.StartDateTimeEditor.Time)").parent().toggle();
                $("#@Html.FieldIdFor(m => m.EndDateTimeEditor.Time)").parent().toggle();
            }

            // initial
            if(toggleCheckbox.val() == true)
                toggleTimeFields();

        })(jQuery);
    </script>
}